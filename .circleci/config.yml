# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2

defaults: &linux_defaults
  working_directory: /go/src/github.com/hashgard/hashgard
  docker:
    - image: circleci/golang:1.12.1
  environment:
    GOBIN: /tmp/workspace/bin

deps: &dependencies
  run:
    name: dependencies
    command: |
      export PATH="$GOBIN:$PATH"

jobs:
  setup_dependencies:
    <<: *linux_defaults
    steps:
      - run: mkdir -p /tmp/workspace/bin
      - run: mkdir -p /tmp/workspace/profiles
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: tools
          command: |
            export PATH="$GOBIN:$PATH"
            make get_tools
      - *dependencies
      - run:
          name: binaries
          command: |
            export PATH="$GOBIN:$PATH"
            make go-mod-cache
            make install
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - bin
            - profiles

  lint:
    <<: *linux_defaults
    parallelism: 1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - *dependencies
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Lint source
          command: |
            export PATH="$GOBIN:$PATH"
            make ci-lint

  test_cover:
    <<: *linux_defaults
    parallelism: 4
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - *dependencies
      - run: mkdir -p /tmp/logs
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Run tests
          command: |
            export PATH="$GOBIN:$PATH"
            export VERSION="$(git describe --tags --long | sed 's/v\(.*\)/\1/')"
            export GO111MODULE=on
            for pkg in $(go list ./... | grep -v github.com/cosmos/cosmos-sdk/cmd/gaia/cli_test | grep -v '/simulation' | circleci tests split --split-by=timings); do
              id=$(echo "$pkg" | sed 's|[/.]|_|g')
              go test -mod=readonly -timeout 8m -race -coverprofile=/tmp/workspace/profiles/$id.out -covermode=atomic -tags='ledger test_ledger_mock' "$pkg" | tee "/tmp/logs/$id-$RANDOM.log"
            done
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - "profiles/*"
      - store_artifacts:
          path: /tmp/logs

workflows:
  version: 2
  test-suite:
    jobs:
      - setup_dependencies:
          # filters here are needed to enable this job also for tags
          filters:
            tags:
              only:
                - /^v.*/
      - lint:
          requires:
            - setup_dependencies
      - test_cover:
          requires:
            - setup_dependencies